{
	"name": "DF_55_Union_Transformation",
	"properties": {
		"folder": {
			"name": "Practice_2"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_azuresynapsecoursedl",
						"type": "LinkedServiceReference"
					},
					"name": "EmpSource2"
				},
				{
					"linkedService": {
						"referenceName": "ls_azuresynapsecoursedl",
						"type": "LinkedServiceReference"
					},
					"name": "EmpSource3"
				},
				{
					"linkedService": {
						"referenceName": "ls_azuresynapsecoursedl",
						"type": "LinkedServiceReference"
					},
					"name": "EmpSource4"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_ADF_DEMO_SQL_SVR",
						"type": "LinkedServiceReference"
					},
					"name": "sinktoTable"
				},
				{
					"linkedService": {
						"referenceName": "ls_azuresynapsecoursedl",
						"type": "LinkedServiceReference"
					},
					"name": "sinktoFile"
				}
			],
			"transformations": [
				{
					"name": "unionAllStreams"
				},
				{
					"name": "AddStreamName1"
				},
				{
					"name": "AddStream2"
				},
				{
					"name": "AddStream3"
				},
				{
					"name": "RenameColumns"
				}
			],
			"scriptLines": [
				"source(useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'practice',",
				"     folderPath: 'input/VideoNo46_Mapping_Data_Flows',",
				"     fileName: 'EmpFile2ForUnion',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> EmpSource2",
				"source(useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'practice',",
				"     folderPath: 'input/VideoNo46_Mapping_Data_Flows',",
				"     fileName: 'EmpFile3ForUnion',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> EmpSource3",
				"source(useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'practice',",
				"     folderPath: 'input/VideoNo46_Mapping_Data_Flows',",
				"     fileName: 'EmpFile4ForUnion',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     multiLineRow: true) ~> EmpSource4",
				"AddStreamName1, AddStream2, AddStream3 union(byName: true)~> unionAllStreams",
				"EmpSource2 derive(Source = \"Source1\") ~> AddStreamName1",
				"EmpSource3 derive(Source = \"Source2\") ~> AddStream2",
				"EmpSource4 derive(Source = \"Source3\") ~> AddStream3",
				"unionAllStreams select(mapColumn(",
				"          each(match(type==\"string\" && name==\"empname\"),",
				"               \"EMPLOYEENAME\" = $$),",
				"          each(match(type==\"string\" && name!=\"empname\"),",
				"               upper($$) = $$)",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> RenameColumns",
				"RenameColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'Employee55Union',",
				"     preSQLs:['delete from dbo.Employee55Union'],",
				"     insertable: true,",
				"     updateable: false,",
				"     deletable: false,",
				"     upsertable: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          each(match(name==\"EMPLOYEENAME\"),",
				"               \"EmployeeName\" = $$),",
				"          each(match(name==\"GENDER\"),",
				"               \"Gender\" = $$),",
				"          each(match(name==\"COUNTRY\"),",
				"               \"Country\" = $$),",
				"          each(match(name==\"SALARY\"),",
				"               \"Salary\" = $$)",
				"     )) ~> sinktoTable",
				"RenameColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     fileSystem: 'practice',",
				"     folderPath: (\"output/55\"+toString(currentDate(),\"yyyy-MM-dd\")),",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinktoFile"
			]
		}
	}
}